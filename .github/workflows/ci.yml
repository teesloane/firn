# most of this is borrowed from ripgrep's ci pipeline.
name: release
on:
  push:
    # Enable when testing release infrastructure on a branch.
    # branches:
    # - main

    tags:
      - "v*.*.*"
jobs:
  build-release:
    name: build-release
    # needs: ['create-release']
    runs-on: ${{ matrix.os }}
    env:
      # For some builds, we use cross to test on 32-bit and big-endian
      # systems.
      CARGO: cargo
      # When CARGO is set to CROSS, this is set to `--target matrix.target`.
      TARGET_FLAGS: ""
      # When CARGO is set to CROSS, TARGET_DIR includes matrix.target.
      TARGET_DIR: ./target
      # Emit backtraces on panics.
      RUST_BACKTRACE: 1
    strategy:
      matrix:
        build: [linux, linux-arm, macos]
        include:
        - build: linux
          os: ubuntu-18.04
          rust: nightly
          asset_name: firn-linux-x86_64
          target: x86_64-unknown-linux-musl
        - build: linux-arm
          os: ubuntu-18.04
          rust: nightly
          target: arm-unknown-linux-gnueabihf
          asset_name: firn-linux-arm
        - build: macos
          os: macos-latest
          rust: nightly
          target: x86_64-apple-darwin
          asset_name: firn-mac-x86_64

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 1

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust }}
        profile: minimal
        override: true
        target: ${{ matrix.target }}

    - name: Use Cross
      shell: bash
      run: |
        cargo install cross
        echo "CARGO=cross" >> $GITHUB_ENV
        echo "TARGET_FLAGS=--target ${{ matrix.target }}" >> $GITHUB_ENV
        echo "TARGET_DIR=./target/${{ matrix.target }}" >> $GITHUB_ENV

    - name: Show command used for Cargo
      run: |
        echo "cargo command is: ${{ env.CARGO }}"
        echo "target flag is: ${{ env.TARGET_FLAGS }}"
        echo "target dir is: ${{ env.TARGET_DIR }}"

    - name: Build release binary
      run: ${{ env.CARGO }} build  --release

    - name: Strip release binary (linux and macos)
      if: matrix.build == 'linux' || matrix.build == 'macos'
      run: strip "target/release/firn"

    - name: chmod it
      run: chmod +x target/release/firn

    - name: Tar it
      run: tar -zcvf ${{matrix.asset_name}}.tar.gz target/release/firn

    # - name: Release
    #   uses: softprops/action-gh-release@v1
    #   if: startsWith(github.ref, 'refs/tags/')
    #   with:
    #     files: |
    #       target/release/firn

    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: target/release/firn
        asset_name: ${{ matrix.asset_name }}.tar.gz
        tag: ${{ github.ref }}
