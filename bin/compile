#!/usr/bin/env bash
# This should only really be run on CI.
# GraalVM, run locally, takes a while and uses quite a bit of memory.
# If you are looking to hack on this project locally, it is recommended to:
# a) Run make install to create a local version of the parser
# b) Boot into a repl and test commands in your editor, which will use the development parser
# If you are developing locally, it's assumed that you have Rust and Clojure already installed.

set -eo pipefail

# install rust if it's not around. (ci)
curl https://sh.rustup.rs -sSf | sh -s -- -y
source $HOME/.cargo/env
# build the rust library

cd rust
cargo build --release

# move rust artifact into clojure resources.
if [ "$(uname)" == "Darwin" ]; then
    cp target/release/libfirnparser.dylib ../clojure/resources/ # mac
elif [ "$(expr substr $(uname -s) 1 5)" == "Linux" ]; then
    cp target/release/libfirnparser.so ../clojure/resources/ # linux
fi

# check graalvm settings and use its java compiler

if [ -z "$GRAALVM_HOME" ]; then
    echo "Please set GRAALVM_HOME"
    exit 1
fi


"$GRAALVM_HOME/bin/gu" install native-image || true

export JAVA_HOME=$GRAALVM_HOME

# build clojure uberjar
cd ../clojure
echo  "--> Start: compiling clojure code."
lein do clean, uberjar

# build the GraalVM compiled executable
args=( -jar target/firn-0.0.5-SNAPSHOT-standalone.jar \
            "-H:Name=firn" \
            "-H:+ReportExceptionStackTraces" \
            "-J-Dclojure.spec.skip-macros=true" \
            "-J-Dclojure.compiler.direct-linking=true" \
            "--initialize-at-build-time" \
            "--report-unsupported-elements-at-runtime" \
            "-H:IncludeResources=libfirnparser.dylib" \
            "-H:IncludeResources=libfirnparser.so" \
            "-H:IncludeResources=firn/.*" \
            "-H:Log=registerResource:" \
            "-H:ReflectionConfigurationFiles=reflection.json"
            "-H:+JNI" \
            "--verbose" \
            # get compilation on linux working:
            "--allow-incomplete-classpath" \
            "--no-server" )


echo  "--> Finish: compiling clojure code."
echo  "--> Start: compiling native code with native-image."
$GRAALVM_HOME/bin/native-image "${args[@]}"

lein clean

cd ../

mkdir -p target
cp clojure/firn target

pwd
